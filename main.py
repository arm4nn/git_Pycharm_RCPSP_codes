tests = [(1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 10), (2, 1), (2, 2), (2, 3),
         (2, 4), (2, 5), (2, 6), (2, 7), (2, 9), (2, 10), (3, 1), (3, 2), (3, 3), (3, 4), (3, 5), (3, 6),
         (3, 7), (3, 8), (3, 9), (3, 10), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8),
         (4, 9), (4, 10), (7, 1), (7, 6), (7, 7), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7),
         (8, 8), (8, 9), (8, 10), (11, 3), (11, 9), (12, 1), (12, 2), (12, 3), (12, 4), (12, 5), (12, 6),
         (12, 7), (12, 8), (12, 9), (12, 10), (15, 2), (15, 4), (16, 1), (16, 2), (16, 3), (16, 4), (16, 5),
         (16, 6), (16, 7), (16, 8), (16, 9), (16, 10), (17, 1), (17, 2), (17, 3), (17, 4), (17, 5), (17, 6),
         (17, 7), (17, 8), (17, 9), (17, 10), (18, 1), (18, 2), (18, 3), (18, 4), (18, 5), (18, 6), (18, 7),
         (18, 8), (18, 9), (18, 10), (19, 1), (19, 2), (19, 3), (19, 4), (19, 5), (19, 6), (19, 7), (19, 8),
         (19, 9), (19, 10), (20, 1), (20, 2), (20, 3), (20, 4), (20, 5), (20, 6), (20, 7), (20, 8), (20, 9),
         (20, 10), (23, 1), (23, 2), (23, 3), (23, 4), (23, 6), (23, 10), (24, 1), (24, 3), (24, 4), (24, 5),
         (24, 6), (24, 7), (24, 8), (24, 9), (24, 10), (27, 2), (27, 3), (27, 4), (27, 10), (28, 1), (28, 2),
         (28, 4), (28, 5), (28, 6), (28, 7), (28, 8), (28, 9), (28, 10), (31, 1), (31, 2), (31, 3), (31, 4),
         (31, 6), (32, 1), (32, 2), (32, 3), (32, 5), (32, 6), (32, 7), (32, 8), (32, 9), (32, 10), (33, 1),
         (33, 2), (33, 3), (33, 4), (33, 5), (33, 6), (33, 7), (33, 8), (33, 9), (33, 10), (34, 1), (34, 2),
         (34, 3), (34, 4), (34, 5), (34, 6), (34, 7), (34, 8), (34, 9), (34, 10), (35, 1), (35, 2), (35, 3),
         (35, 4), (35, 5), (35, 6), (35, 7), (35, 8), (35, 9), (35, 10), (36, 1), (36, 2), (36, 3), (36, 4),
         (36, 5), (36, 6), (36, 7), (36, 8), (36, 9), (36, 10), (38, 4), (38, 6), (39, 1), (39, 2), (39, 3),
         (39, 4), (39, 5), (39, 6), (39, 7), (39, 8), (39, 9), (39, 10), (40, 1), (40, 2), (40, 3), (40, 4),
         (40, 5), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (42, 10), (43, 2), (44, 1), (44, 2), (44, 3),
         (44, 4), (44, 5), (44, 6), (44, 7), (44, 8), (44, 9), (44, 10), (47, 2), (48, 1), (48, 2), (48, 3),
         (48, 4), (48, 5), (48, 6), (48, 7), (48, 8), (48, 9), (48, 10)]

# ------------------------------------------------------------------------------------- find FCT X

from Solver import Solver
import numpy as np

for key in tests:
    X = Solver(key, 'fct')
    file = 'fct/' + str(key[0]) + '_' + str(key[1]) + '.x'
    np.savetxt(file, X.det_x, fmt='%d')

# ------------------------------------------------------------------------------------- find SFCT X

from Solver import Solver
import numpy as np

for key in tests:
    for it in range(100):
        X = Solver(key, 'sfct', iteration=it)
        file = 'sfct/' + str(key[0]) + '_' + str(key[1]) + '__' + str(it) + '.x'
        np.savetxt(file, X.det_x, fmt='%d')

# ------------------------------------------------------------------------------------- simulate SFCT

import os

names = []
for root, dirs, files in os.walk("./sfct"):
    for filename in files:
        names.append(filename)
d = {}
for i, name in enumerate(names):
    if name[-1] == 'x':
        key = [int(s) for s in name.split('_')[:2]]
        try:
            d[key[0], key[1]].append(int(name.split('_')[-1].split('.')[0]))
        except:
            d[key[0], key[1]] = list([int(name.split('_')[-1].split('.')[0])])
for key in d:
    d[key] = sorted(d[key])

import pandas as pd
from Simulator import Simulator
from Data import Data

dic = {}
for k in d:
    data = Data(k)
    data.gen_scn(20, 2000)
    for i in d[k][:50]:
        file = './sfct/' + str(k[0]) + '_' + str(k[1]) + '__' + str(i) + '.x'
        X = Simulator(model_type='sfct', file=file, data=data)
        if X.status:
            dic[k[0], k[1], i] = [X.obj]
        else:
            raise Exception("status is False for {}".format(k))
pd.DataFrame(dic)
pd.DataFrame(dic).T.to_csv('SFCT_simulation.csv')

# ------------------------------------------------------------------------------------- simulate FCT

import pandas as pd
from Simulator import Simulator
from Data import Data

dic = {}
for k in tests:
    data = Data(k)
    data.gen_scn(20, 2000)
    file = './fct/' + str(k[0]) + '_' + str(k[1]) + '.x'
    X = Simulator(model_type='sfct', file=file, data=data)
    if X.status:
        dic[k] = [X.obj]
    else:
        dic[k] = ['FALSE']
pd.DataFrame(dic)
pd.DataFrame(dic).T.to_csv('FCT_simulation.csv')

# -------------------------------------------------------------------------------------


"""
16-1:   1.5, 1.00, 1.00
20-1:   1.8, 0.25, 1.00
33-1:   2.1, 0.25, 0.20
"""
